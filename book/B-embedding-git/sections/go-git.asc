=== go-git

(((go-git)))(((Go)))
У случају да Гит желите да интегришете у сервис написан на _Golang_ језику, постоји такође и чиста _Go_ имплементација библиотеке.
Ова имплементација нема никакве природне зависности, па није склона грешкама услед ручног управљања меморијом.
Такође је транспарентна за стандардне _Golang_ алате за анализу перформанси као што су CPU, Профилисање меморије, детектор _race_ услова, итд.

go-git је фокусиран на проширивост, компатибилност и подржава већину водоводног API, што је документовано у https://github.com/go-git/go-git/blob/master/COMPATIBILITY.md[].

Ево основног примера употребе _Go_ API:

[source, go]
----
import "github.com/go-git/go-git/v5"

r, err := git.PlainClone("/tmp/foo", false, &git.CloneOptions{
    URL:      "https://github.com/go-git/go-git",
    Progress: os.Stdout,
})
----

Чим дођете до `Repository` инстанце, можете приступити информацијама и извршити мутације над њом:

[source, go]
----
// retrieves the branch pointed by HEAD
ref, err := r.Head()

// get the commit object, pointed by ref
commit, err := r.CommitObject(ref.Hash())

// retrieves the commit history
history, err := commit.History()

// iterates over the commits and print each
for _, c := range history {
    fmt.Println(c)
}
----

==== Напредна функционалност

go-git има неколико запажених могућности, а једна од њих је систем складиштења који може да се проширује, што личи на _Libgit2_ позадинске механизме.
Подразумевана имплементација је складиштење унутар меморије, што је веома брзо.

[source, go]
----
r, err := git.Clone(memory.NewStorage(), nil, &git.CloneOptions{
    URL: "https://github.com/go-git/go-git",
})
----

Прошириво складиште нуди много интересантних опција.
На пример, https://github.com/go-git/go-git/tree/master/_examples/storage[] вам омогућава да референце, објекте и конфигурацију складиштите у _Aerospike_ бази података.

Још једна могућност је флексибилна апстракција фајл система.
Употребом https://pkg.go.dev/github.com/go-git/go-billy/v5?tab=doc#Filesystem[] је једноставно да се сви фајлови чувају на различите начине нпр. да се сви упакују у једну архиву на диску или да се дви чувају унутар меморије.

Још један напредни случај коришћења је фино подесиви HTTP клијент као што је онај који може да се нађе на адреси https://github.com/go-git/go-git/blob/master/_examples/custom_http/main.go[].

[source, go]
----
customClient := &http.Client{
    Transport: &http.Transport{ // accept any certificate (might be useful for testing)
        TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
    },
    Timeout: 15 * time.Second,  // 15 second timeout
        CheckRedirect: func(req *http.Request, via []*http.Request) error {
        return http.ErrUseLastResponse // don't follow redirect
    },
}

// Override http(s) default protocol to use our custom client
client.InstallProtocol("https", githttp.NewClient(customClient))

// Clone repository using the new client if the protocol is https://
r, err := git.Clone(memory.NewStorage(), nil, &git.CloneOptions{URL: url})
----

==== Наставак читања

Потпуни третман _go-git_ могућности излази ван оквира ове књиге.
Ако желите више информација у вези _go-git,_ на адреси https://pkg.go.dev/github.com/go-git/go-git/v5[] се налази API документација, а скуп примера употребе на адреси https://github.com/go-git/go-git/tree/master/_examples[].
