==== Гит и Базаар

Још један од чувених DVCS је http://bazaar.canonical.com[Базаар].
Базаар је слободан и отвореног кода и чини део https://www.gnu.org[ГНУ пројекта].
Понаша се потпуно другачије од програма Гит.
Понекада, ако желите да урадите исту ствар као у програму Гит, морате да употребите другу кључну реч, а неке заједничке кључне речи немају исто значење.
Уствари, управљање гранама је веома различито и може да унесе забуну, посебно некоме ко долази из Гит света.
Без обзира на све, могуће је радити на Базаар репозиторијуму из Гит репозиторијума.

Постоје многи пројекти који вам омогућавају да програм Гит користите као Базаар клијент.
Овде ћемо употребити пројекат Фелипеа Контрераса који можете пронаћи на адреси https://github.com/felipec/git-remote-bzr[].
Да бисте га инсталирали, једноставно треба да преузмете фајл _git-remote-bzr_ и поставите га у директоријум који је део `$PATH`:

[source,console]
----
$ wget https://raw.github.com/felipec/git-remote-bzr/master/git-remote-bzr -O ~/bin/git-remote-bzr
$ chmod +x ~/bin/git-remote-bzr
----

Такође је потребно да имате инсталиран програм Базаар.
И то је све!

===== Креирање Гит репозиторијума из Базаар репозиторијума

Ово је једноставно.
Довољно је да клонирате Базаар репозиторијум тако што испред имена наведете `bzr::`.
Пошто и Гит и Базаар раде потпуно клонирање на вашу машину, Гит клон може да се прикачи на Базаар клон, али се то не препоручује.
It's much easier to attach your Git clone directly to the same place your Bazaar clone is attached to -- the central repository.

Претпоставимо да сте радили са удаљеним репозиторијумом који се налази на адреси `bzr+ssh://developer@mybazaarserver:myproject`.
Затим морате да га клонирате на следећи начин:

[source,console]
----
$ git clone bzr::bzr+ssh://developer@mybazaarserver:myproject myProject-Git
$ cd myProject-Git
----

У овом тренутку имате креиран Гит репозиторијум, али он није оптимизован за ефикасно искоришћење диска.
Зато би требало да пречистите и сажмете ваш Гит репозиторијум, посебно ако је велики:

[source,console]
----
$ git gc --aggressive
----

===== Базаар гране

Базаар вам дозвољава само да клонирате гране, али репозиторијум може да садржи неколико грана, па `git-remote-bzr` може да клонира и једно и друго.
На пример, ако желите да клонирате грану:

[source,console]
----
$ git clone bzr::bzr://bzr.savannah.gnu.org/emacs/trunk emacs-trunk
----

А да клонирате комплетан репозиторијум:

[source,console]
----
$ git clone bzr::bzr://bzr.savannah.gnu.org/emacs emacs
----

Друга команда клонира све гране које се налазе у _emacs_ репозиторијуму; међутим, ипак је могуће да се укаже на поједине гране:

[source,console]
----
$ git config remote-bzr.branches 'trunk, xwindow'
----

Неки репозиторијуми вам не дозвољавају да видите њихове гране, па их у том случају морате ручно навести, мада бисте могли да наведете конфигурацију у команди клонирања, можда вам је ово лакше:

[source,console]
----
$ git init emacs
$ git remote add origin bzr::bzr://bzr.savannah.gnu.org/emacs
$ git config remote-bzr.branches 'trunk, xwindow'
$ git fetch
----

===== Игнорисање онога што се игнорише у .bzrignore

Пошто радите на пројекту којим управља Базаар, не би требало да креирате `.gitignore` фајл јер нехотично _можете_ да га поставите под контролу верзија и то може засметати осталим људима који користе Базаар.
Решење је да фајл `.git/info/exclude` креирате или као симболички линк или као обичан фајл.
Касније ћемо видети како се решава ово питање.

Базаар за игнорисање фајлова користи исти модел као и програм Гит, али има и две могућности које немају свој еквивалент у програму Гит.
Комплетан опис се налази у http://doc.bazaar.canonical.com/bzr.2.7/en/user-reference/ignore-help.html[документацији].
Могућности су следеће:

1. „!!” вам дозвољава да игноришете одређене фајл шаблоне чак и када су наведени употребом „!” правила.
2. "RE:" на почетку линије вам дозвољава да наведете https://docs.python.org/3/library/re.html[Пајтон регуларни израз] (програм Гит дозвољава само глобове љуске).

Као последица, постоје две различите ситуације о којима треба да размислите:

1. Ако `.bzrignore` фајл не садржи ниједан од ова два посебна префикса, онда једноставно у репозиторијуму можете направити симболички линк на њега: `ln -s .bzrignore .git/info/exclude`.
2. У супротном, морате да креирате фајл `.git/info/exclude` и да га прилагодите тако да се игноришу потпуно исти фајлови као у `.bzrignore`.

Шта год да је случај, мораћете остати на опрезу у случају било какве измене фајла `.bzrignore` и да осигурате да фајл `.git/info/exclude` увек пресликава `.bzrignore`.
Заиста, ако би измена `.bzrignore` фајла садржала једну или више линија које почињу са „!!” или „RE:”, како програм Git не може те линије да интерпретира, морали бисте да преправите свој `.git/info/exclude` фајл тако да игнорише исте фајлове као оне које игнорише `.bzrignore` фајл.
Уз то, ако је `.git/info/exclude` фајл уствари симболички линк, прво морате да обришете симболички линк, копирате `.bzrignore` у `.git/info/exclude` па да онда прилагодите овај други.
Међутим, будите опрезни у вези креирања овог фајла, јер је са програмом Гит немогуће поновно укључивање фајла ако је директоријум родитељ тог фајла искључен.

===== Преузимање измена са удаљеног репозиторијума

Да бисте преузели измене са удаљеног, повлачите измене као и обично, употребом команди програма Гит.
Под претпоставком да су ваше измене на `master` грани, спајате или ребазирате свој рад на  `origin/master` грану:

[source,console]
----
$ git pull --rebase origin
----

===== Гурање вашег рада на удаљени репозиторијум

Пошто и Базаар има концепт комитова спајања, неће бити проблема ако гурнете комит спајања.
Тако да можете радити на грани, спојити измене у `master` и гурнути свој рад.
Затим, креирате своје гране, тестирате и комитујете рад као и обично.
На крају гурнете свој рад на Базаар репозиторијум:

[source,console]
----
$ git push origin master
----

===== Ограничења

Радни оквир програма Гит за удаљене помоћнике има нека ограничења која важе.
Тачније, следеће команде не функционишу:

* git push origin :грана-за-брисање (Базаар не прихвата овакав начин брисања референци)
* git push origin old:new (гурнуће се `old`)
* git push --dry-run origin branch (извршиће се гурање)

===== Резиме

Пошто су модели програма Гит и Базаар слични, нема много отпора када радите с друге стране границе.
Док год пазите на ограничења и свесни сте да удаљени репозиторијум није природно Гит, биће све у реду.
